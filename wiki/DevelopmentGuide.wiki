#summary Development Guide
#labels Development,Guide,Roadmap

= What the ANTLR Php Runtime is all about? =

ANTLR Tool is a well known library that has been around for more then a decade. It allows to generate grammatical parsers facilitating in language recognition tasks. 
This project concentrates on providing the PHP implementation of the ANTLR runtime.

= ROADMAP =

The idea behind the code placement in the project is to maintain close ressembleness
to the existing structure of the original ANTLR code as well as introduce nice modern way of PHP packaging (for example, like it is done in Zend Framework). The main elements are:

* *runtime* 
* *tool*
* *examples*

= Codestyle =

In order to produce effective, readable and synchronized code the use of code styles is required. Please, use such PHP tools as *codesniffer* to to auto checks before committing new code. In case of uncertainty or doubt developer is highly encouraged to follow this list of coding standards, sorted according to their descending weight:

* [Zend coding standard | http://framework.zend.com/manual/en/coding-standard.html]
* Pear coding standard
* PHP coding standard

= ANTLR Tool Integration =

To integrate into the org.antlr.tool (which is written in Java) one has to create
at minimum two files:
* Java class for implementation of org.antlr.codegen.Target
``
* Language StringTemplate group file , used for code generation
`tool/src/main/resources/org/antlr/codegen/templates/Php/Php.stg`

Now a very convenient way for frequent introduction of changes into the .stg file,
is to pack PHP ANTLR Target into a separate Jar file. Then on need to append this new extension jar to the classpath when calling `org.antlr.Tool`. This works perfectly fine,
because it is actually a very good example of exploiting the idea of Java packaging for maintaining code extensibility.

== Compiling antlr-php.jar ==

Ant is used to help with compilation of the PHP target jar. Please see _build.xml_ for technical details. Just invoke `ant` in your project root.
 
== Using org.antlr.Tool ==

The project root contains `antlr-tool.sh` scipt that wraps around org.antlr.Tool, setting up the classpath and passing the arguments. Here goes the usage example:

{{{
./antlr-tool.sh -make -fo examples/trivialXMLLexer/ examples/trivialXMLLexer/XMLLexer.g
}}}